{"version":3,"sources":["webpack://backend/webpack/bootstrap","webpack://backend/./backend/src/controller/hook.js","webpack://backend/./backend/src/controller/test.js","webpack://backend/./backend/src/routes.js","webpack://backend/./backend/src/meta.js","webpack://backend/./backend/src/config/middleware/hook.js","webpack://backend/./backend/src/config/middlewares.js","webpack://backend/./backend/src/config/errors.js","webpack://backend/./backend/src/config/locale/zh-cn.js","webpack://backend/./backend/src/config/locales.js","webpack://backend/./backend/src/config/config.js","webpack://backend/./backend/src/service/hook.js","webpack://backend/./backend/src/services.js","webpack://backend/./backend/src/main.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;AClFA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;ACbA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;AClBA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,mBAAmB,gBAAgB;AACnC,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO,2EAA2E;AAClF,OAAO,qFAAqF;AAC5F,OAAO,oFAAoF;AAC3F;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0DAA0D;AACrE;AACA;AACA,WAAW,yDAAyD;AACpE;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,cAAc,GAAG,iBAAiB,GAAG,qBAAqB,GAAG,iBAAiB;AACjG;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;ACrBA;;AAEA;AACA;AACA;;;;;;;ACJA;AACA;AACA;;;;;;;ACFA;AACA;;;;;;;ACDA;AACA;AACA;;;;;;;ACFA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;;;;;ACrBA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC,YAAY,gBAAgB,GAAG,WAAW,GAAG;AACjF;AACA;;AAEA;;AAEA;AACA;;;;;;;AC3BA;;AAEA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","module.exports = app => {\n\n  class HookController extends app.Controller {\n\n    async installHooks() {\n      // register all hooks\n      await this.ctx.service.hook.registerAllHooks();\n      this.ctx.success();\n    }\n\n  }\n\n  return HookController;\n};\n","module.exports = app => {\n  class TestController extends app.Controller {\n\n    async test() {\n      this.ctx.success();\n    }\n\n    async hookTestBefore() {\n      console.log('hook:before', this.ctx.ctxCaller.route);\n      this.ctx.success();\n    }\n    async hookTestAfter() {\n      console.log('hook:after', this.ctx.ctxCaller.route);\n      this.ctx.success();\n    }\n\n  }\n  return TestController;\n};\n\n","const test = require('./controller/test.js');\nconst hook = require('./controller/hook.js');\n\nmodule.exports = app => {\n  let routes = [\n    { method: 'post', path: 'hook/installHooks', controller: hook, middlewares: 'inner',\n      meta: {\n        instance: { enable: false },\n      },\n    },\n  ];\n  if (app.meta.isTest) {\n    routes = routes.concat([\n      { method: 'post', path: 'test/test', controller: test, middlewares: 'test' },\n      { method: 'post', path: 'test/hookTestBefore', controller: test, middlewares: 'test' },\n      { method: 'post', path: 'test/hookTestAfter', controller: test, middlewares: 'test' },\n    ]);\n  }\n  return routes;\n};\n","module.exports = app => {\n  const meta = {};\n  if (app.meta.isTest) {\n    Object.assign(meta, {\n      hook: {\n        before: [\n          { path: '/a/base/auth/echo', route: 'test/hookTestBefore' },\n        ],\n        after: [\n          { path: '/a/base/auth/echo', route: 'test/hookTestAfter' },\n        ],\n      },\n    });\n  }\n  return meta;\n};\n","module.exports = () => {\n  return async function hook(ctx, next) {\n    // before\n    await invokeHooks(ctx, 'before');\n    // next\n    await next();\n    // after\n    await invokeHooks(ctx, 'after');\n  };\n};\n\nasync function invokeHooks(ctx, stage) {\n  if (!ctx.route) return;\n  const path = `/${ctx.route.pid}/${ctx.route.module}/${ctx.route.controller}/${ctx.route.action}`;\n  const hooks = ctx.app.meta.geto('hooks').geto(stage).geta(path);\n  for (const hook of hooks) {\n    await ctx.performAction({\n      method: 'post',\n      url: hook.route,\n    });\n  }\n}\n","const hook = require('./middleware/hook.js');\n\nmodule.exports = {\n  hook,\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","module.exports = {\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n\n  // middlewares\n  config.middlewares = {\n    hook: {\n      global: true,\n      dependencies: 'instance',\n    },\n  };\n\n  // startups\n  config.startups = {\n    installHooks: {\n      type: 'all',\n      path: 'hook/installHooks',\n    },\n  };\n\n  return config;\n};\n","module.exports = app => {\n\n  class Hook extends app.Service {\n\n    // register all hooks\n    async registerAllHooks() {\n      for (const relativeName in this.app.meta.modules) {\n        const module = this.app.meta.modules[relativeName];\n        if (module.main.meta && module.main.meta.hook) {\n          this._registerHooks(module, 'before');\n          this._registerHooks(module, 'after');\n        }\n      }\n    }\n\n    async _registerHooks(module, stage) {\n      const hooksStage = module.main.meta.hook[stage];\n      if (!hooksStage) return;\n      const hooks = this.app.meta.geto('hooks').geto(stage);\n      for (const hook of hooksStage) {\n        hooks.geta(hook.path).push({ route: `/${module.info.url}/${hook.route}` });\n      }\n    }\n\n  }\n\n  return Hook;\n};\n","const hook = require('./service/hook.js');\n\nmodule.exports = {\n  hook,\n};\n","const services = require('./services.js');\nconst config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\nconst middlewares = require('./config/middlewares.js');\n\n// eslint-disable-next-line\nmodule.exports = app => {\n\n  // meta\n  const meta = require('./meta.js')(app);\n  const routes = require('./routes.js')(app);\n\n  return {\n    routes,\n    services,\n    config,\n    locales,\n    errors,\n    middlewares,\n    meta,\n  };\n\n};\n"],"sourceRoot":""}